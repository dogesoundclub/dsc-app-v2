/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KIP17Mock, KIP17MockInterface } from "../KIP17Mock";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x608060405261001a6301ffc9a760e01b61003560201b60201c565b6100306380ac58cd60e01b61003560201b60201c565b610103565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100c657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4b495031333a20696e76616c696420696e746572666163652069640000000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b61136b806101126000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c5780639dc29fac116100665780639dc29fac14610280578063a22cb465146102ac578063b88d4fde146102da578063e985e9c5146103a0576100cf565b806342966c681461020e5780636352211e1461022b57806370a0823114610248576100cf565b806301ffc9a7146100d4578063081812fc1461010f578063095ea7b31461014857806323b872dd1461017657806340c10f19146101ac57806342842e0e146101d8575b600080fd5b6100fb600480360360208110156100ea57600080fd5b50356001600160e01b0319166103ce565b604080519115158252519081900360200190f35b61012c6004803603602081101561012557600080fd5b50356103ed565b604080516001600160a01b039092168252519081900360200190f35b6101746004803603604081101561015e57600080fd5b506001600160a01b038135169060200135610452565b005b6101746004803603606081101561018c57600080fd5b506001600160a01b0381358116916020810135909116906040013561057f565b610174600480360360408110156101c257600080fd5b506001600160a01b0381351690602001356105d7565b610174600480360360608110156101ee57600080fd5b506001600160a01b038135811691602081013590911690604001356105e5565b6101746004803603602081101561022457600080fd5b5035610600565b61012c6004803603602081101561024157600080fd5b503561060c565b61026e6004803603602081101561025e57600080fd5b50356001600160a01b0316610669565b60408051918252519081900360200190f35b6101746004803603604081101561029657600080fd5b506001600160a01b0381351690602001356106d4565b610174600480360360408110156102c257600080fd5b506001600160a01b03813516906020013515156106de565b610174600480360360808110156102f057600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561032b57600080fd5b82018360208201111561033d57600080fd5b8035906020019184600183028401116401000000008311171561035f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107ad945050505050565b6100fb600480360360408110156103b657600080fd5b506001600160a01b0381358116916020013516610808565b6001600160e01b03191660009081526020819052604090205460ff1690565b60006103f882610836565b61043657604051600160e51b62461bcd02815260040180806020018281038252602b8152602001806112b3602b913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061045d8261060c565b9050806001600160a01b0316836001600160a01b031614156104c95760408051600160e51b62461bcd02815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e6572604482015290519081900360640190fd5b336001600160a01b03821614806104e557506104e58133610808565b61052357604051600160e51b62461bcd0281526004018080602001828103825260378152602001806112de6037913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6105893382610853565b6105c757604051600160e51b62461bcd0281526004018080602001828103825260308152602001806111de6030913960400191505060405180910390fd5b6105d28383836108fa565b505050565b6105e18282610a44565b5050565b6105d2838383604051806020016040528060008152506107ad565b61060981610b7b565b50565b6000818152600160205260408120546001600160a01b03168061066357604051600160e51b62461bcd0281526004018080602001828103825260288152602001806111b66028913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166106b357604051600160e51b62461bcd02815260040180806020018281038252602981526020018061123e6029913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061066390610b8d565b6105e18282610b91565b6001600160a01b03821633141561073f5760408051600160e51b62461bcd02815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c65720000000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6107b884848461057f565b6107c484848484610c6b565b61080257604051600160e51b62461bcd02815260040180806020018281038252603081526020018061120e6030913960400191505060405180910390fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b600061085e82610836565b61089c57604051600160e51b62461bcd02815260040180806020018281038252602b815260200180611315602b913960400191505060405180910390fd5b60006108a78361060c565b9050806001600160a01b0316846001600160a01b031614806108e25750836001600160a01b03166108d7846103ed565b6001600160a01b0316145b806108f257506108f28185610808565b949350505050565b826001600160a01b031661090d8261060c565b6001600160a01b03161461095557604051600160e51b62461bcd0281526004018080602001828103825260288152602001806112676028913960400191505060405180910390fd5b6001600160a01b03821661099d57604051600160e51b62461bcd0281526004018080602001828103825260238152602001806111936023913960400191505060405180910390fd5b6109a68161104e565b6001600160a01b03831660009081526003602052604090206109c790611089565b6001600160a01b03821660009081526003602052604090206109e8906110a0565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610aa25760408051600160e51b62461bcd02815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610aab81610836565b15610b005760408051600160e51b62461bcd02815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e7465640000000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020610b3f906110a0565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610609610b878261060c565b82610b91565b5490565b816001600160a01b0316610ba48261060c565b6001600160a01b031614610bec57604051600160e51b62461bcd02815260040180806020018281038252602481526020018061128f6024913960400191505060405180910390fd5b610bf58161104e565b6001600160a01b0382166000908152600360205260409020610c1690611089565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000806060610c82866001600160a01b03166110a9565b610c91576001925050506108f2565b856001600160a01b031663150b7a0260e01b3389888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610d1d578181015183820152602001610d05565b50505050905090810190601f168015610d4a5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310610db25780518252601f199092019160209182019101610d93565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610e14576040519150601f19603f3d011682016040523d82523d6000602084013e610e19565b606091505b508051919350915015801590610e5957508051600160e11b630a85bd01029060208084019190811015610e4b57600080fd5b50516001600160e01b031916145b15610e69576001925050506108f2565b856001600160a01b0316636745782b60e01b3389888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ef5578181015183820152602001610edd565b50505050905090810190601f168015610f225780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310610f8a5780518252601f199092019160209182019101610f6b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fec576040519150601f19603f3d011682016040523d82523d6000602084013e610ff1565b606091505b50805191935091501580159061103157508051600160e01b636745782b02906020808401919081101561102357600080fd5b50516001600160e01b031916145b15611041576001925050506108f2565b5060009695505050505050565b6000818152600260205260409020546001600160a01b03161561060957600090815260026020526040902080546001600160a01b0319169055565b805461109c90600163ffffffff6110af16565b9055565b80546001019055565b3b151590565b60006110f183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110f8565b9392505050565b6000818484111561118a57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114f578181015183820152602001611137565b50505050905090810190601f16801561117c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea165627a7a72305820fab16128adfe52c8ce18323cf0458ef03a249dc3dc5240a01f435db370ab632e0029";

export class KIP17Mock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KIP17Mock> {
    return super.deploy(overrides || {}) as Promise<KIP17Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KIP17Mock {
    return super.attach(address) as KIP17Mock;
  }
  connect(signer: Signer): KIP17Mock__factory {
    return super.connect(signer) as KIP17Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KIP17MockInterface {
    return new utils.Interface(_abi) as KIP17MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KIP17Mock {
    return new Contract(address, _abi, signerOrProvider) as KIP17Mock;
  }
}
